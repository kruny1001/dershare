// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dershare.proto

package helloworld

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type HelloRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_47876132865a1395, []int{0}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type HelloReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReply) Reset()         { *m = HelloReply{} }
func (m *HelloReply) String() string { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()    {}
func (*HelloReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_47876132865a1395, []int{1}
}

func (m *HelloReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReply.Unmarshal(m, b)
}
func (m *HelloReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReply.Marshal(b, m, deterministic)
}
func (m *HelloReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReply.Merge(m, src)
}
func (m *HelloReply) XXX_Size() int {
	return xxx_messageInfo_HelloReply.Size(m)
}
func (m *HelloReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReply.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReply proto.InternalMessageInfo

func (m *HelloReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ListContainer struct {
	// The name of the feature.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListContainer) Reset()         { *m = ListContainer{} }
func (m *ListContainer) String() string { return proto.CompactTextString(m) }
func (*ListContainer) ProtoMessage()    {}
func (*ListContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_47876132865a1395, []int{2}
}

func (m *ListContainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListContainer.Unmarshal(m, b)
}
func (m *ListContainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListContainer.Marshal(b, m, deterministic)
}
func (m *ListContainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListContainer.Merge(m, src)
}
func (m *ListContainer) XXX_Size() int {
	return xxx_messageInfo_ListContainer.Size(m)
}
func (m *ListContainer) XXX_DiscardUnknown() {
	xxx_messageInfo_ListContainer.DiscardUnknown(m)
}

var xxx_messageInfo_ListContainer proto.InternalMessageInfo

func (m *ListContainer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EssSiteInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Start                string   `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End                  string   `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EssSiteInfo) Reset()         { *m = EssSiteInfo{} }
func (m *EssSiteInfo) String() string { return proto.CompactTextString(m) }
func (*EssSiteInfo) ProtoMessage()    {}
func (*EssSiteInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_47876132865a1395, []int{3}
}

func (m *EssSiteInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EssSiteInfo.Unmarshal(m, b)
}
func (m *EssSiteInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EssSiteInfo.Marshal(b, m, deterministic)
}
func (m *EssSiteInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EssSiteInfo.Merge(m, src)
}
func (m *EssSiteInfo) XXX_Size() int {
	return xxx_messageInfo_EssSiteInfo.Size(m)
}
func (m *EssSiteInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EssSiteInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EssSiteInfo proto.InternalMessageInfo

func (m *EssSiteInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EssSiteInfo) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *EssSiteInfo) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

// Return Container List
type ContainerList struct {
	Stocks               []*Container `protobuf:"bytes,1,rep,name=stocks,proto3" json:"stocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ContainerList) Reset()         { *m = ContainerList{} }
func (m *ContainerList) String() string { return proto.CompactTextString(m) }
func (*ContainerList) ProtoMessage()    {}
func (*ContainerList) Descriptor() ([]byte, []int) {
	return fileDescriptor_47876132865a1395, []int{4}
}

func (m *ContainerList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerList.Unmarshal(m, b)
}
func (m *ContainerList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerList.Marshal(b, m, deterministic)
}
func (m *ContainerList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerList.Merge(m, src)
}
func (m *ContainerList) XXX_Size() int {
	return xxx_messageInfo_ContainerList.Size(m)
}
func (m *ContainerList) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerList.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerList proto.InternalMessageInfo

func (m *ContainerList) GetStocks() []*Container {
	if m != nil {
		return m.Stocks
	}
	return nil
}

type QueryResultRow struct {
	Time string `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	//    float usage = 2;
	Usage                string   `protobuf:"bytes,2,opt,name=usage,proto3" json:"usage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryResultRow) Reset()         { *m = QueryResultRow{} }
func (m *QueryResultRow) String() string { return proto.CompactTextString(m) }
func (*QueryResultRow) ProtoMessage()    {}
func (*QueryResultRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_47876132865a1395, []int{5}
}

func (m *QueryResultRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResultRow.Unmarshal(m, b)
}
func (m *QueryResultRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResultRow.Marshal(b, m, deterministic)
}
func (m *QueryResultRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResultRow.Merge(m, src)
}
func (m *QueryResultRow) XXX_Size() int {
	return xxx_messageInfo_QueryResultRow.Size(m)
}
func (m *QueryResultRow) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResultRow.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResultRow proto.InternalMessageInfo

func (m *QueryResultRow) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *QueryResultRow) GetUsage() string {
	if m != nil {
		return m.Usage
	}
	return ""
}

type Container struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Image                string   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Container) Reset()         { *m = Container{} }
func (m *Container) String() string { return proto.CompactTextString(m) }
func (*Container) ProtoMessage()    {}
func (*Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_47876132865a1395, []int{6}
}

func (m *Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Container.Unmarshal(m, b)
}
func (m *Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Container.Marshal(b, m, deterministic)
}
func (m *Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Container.Merge(m, src)
}
func (m *Container) XXX_Size() int {
	return xxx_messageInfo_Container.Size(m)
}
func (m *Container) XXX_DiscardUnknown() {
	xxx_messageInfo_Container.DiscardUnknown(m)
}

var xxx_messageInfo_Container proto.InternalMessageInfo

func (m *Container) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Container) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "helloworld.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "helloworld.HelloReply")
	proto.RegisterType((*ListContainer)(nil), "helloworld.ListContainer")
	proto.RegisterType((*EssSiteInfo)(nil), "helloworld.EssSiteInfo")
	proto.RegisterType((*ContainerList)(nil), "helloworld.ContainerList")
	proto.RegisterType((*QueryResultRow)(nil), "helloworld.QueryResultRow")
	proto.RegisterType((*Container)(nil), "helloworld.Container")
}

func init() { proto.RegisterFile("dershare.proto", fileDescriptor_47876132865a1395) }

var fileDescriptor_47876132865a1395 = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0x4f, 0x4f, 0xfa, 0x40,
	0x10, 0xa5, 0xf0, 0xfb, 0x81, 0x0c, 0xd2, 0x98, 0x89, 0x7f, 0x6a, 0x4f, 0x64, 0x4d, 0x0c, 0x17,
	0x89, 0xe2, 0xcd, 0x03, 0x17, 0x83, 0x62, 0xe2, 0xc5, 0x36, 0x7e, 0x80, 0x6a, 0x47, 0xd9, 0x58,
	0xba, 0xb8, 0xbb, 0x0d, 0xe9, 0x67, 0xf5, 0xcb, 0x98, 0x5d, 0x0b, 0x6c, 0x93, 0xde, 0xe6, 0xed,
	0xbc, 0xce, 0xbc, 0xf7, 0xa6, 0xe0, 0xa7, 0x24, 0xd5, 0x32, 0x91, 0x34, 0x59, 0x4b, 0xa1, 0x05,
	0xc2, 0x92, 0xb2, 0x4c, 0x6c, 0x84, 0xcc, 0x52, 0xc6, 0xe0, 0x70, 0x61, 0x50, 0x44, 0xdf, 0x05,
	0x29, 0x8d, 0x08, 0xff, 0xf2, 0x64, 0x45, 0x81, 0x37, 0xf2, 0xc6, 0xfd, 0xc8, 0xd6, 0xec, 0x12,
	0xa0, 0xe2, 0xac, 0xb3, 0x12, 0x03, 0xe8, 0xad, 0x48, 0xa9, 0xe4, 0x73, 0x4b, 0xda, 0x42, 0x76,
	0x01, 0xc3, 0x67, 0xae, 0xf4, 0xbd, 0xc8, 0x75, 0xc2, 0x73, 0x92, 0x8d, 0xc3, 0xe6, 0x30, 0x98,
	0x2b, 0x15, 0x73, 0x4d, 0x4f, 0xf9, 0x87, 0x40, 0x1f, 0xda, 0x3c, 0xad, 0x08, 0x6d, 0x9e, 0xe2,
	0x31, 0xfc, 0x57, 0x3a, 0x91, 0x3a, 0x68, 0xdb, 0xa7, 0x3f, 0x80, 0x47, 0xd0, 0xa1, 0x3c, 0x0d,
	0x3a, 0xf6, 0xcd, 0x94, 0x6c, 0x06, 0xc3, 0xdd, 0x1e, 0xb3, 0x14, 0xaf, 0xa0, 0xab, 0xb4, 0x78,
	0xff, 0x52, 0x81, 0x37, 0xea, 0x8c, 0x07, 0xd3, 0x93, 0xc9, 0xde, 0xe5, 0x64, 0x47, 0x8d, 0x2a,
	0x12, 0xbb, 0x03, 0xff, 0xa5, 0x20, 0x59, 0x46, 0xa4, 0x8a, 0x4c, 0x47, 0x62, 0x63, 0xc4, 0x6a,
	0xbe, 0x17, 0x6b, 0x6a, 0xa3, 0xa6, 0xb0, 0x4e, 0x2b, 0x35, 0x16, 0xb0, 0x1b, 0xe8, 0xef, 0x3d,
	0x36, 0x18, 0xe0, 0x2b, 0xe7, 0x13, 0x0b, 0xa6, 0x3f, 0x1e, 0xf4, 0x1e, 0x25, 0x91, 0x26, 0x89,
	0x33, 0x38, 0x88, 0x93, 0xd2, 0x26, 0x8a, 0x81, 0xab, 0xd2, 0x3d, 0x44, 0x78, 0xda, 0xd0, 0x59,
	0x67, 0x25, 0x6b, 0xe1, 0x03, 0xf8, 0xb5, 0x98, 0x15, 0x9e, 0xbb, 0xdc, 0x5a, 0x2f, 0x6c, 0x8e,
	0x81, 0xb5, 0xae, 0x3d, 0x5c, 0xc0, 0xd0, 0x46, 0x30, 0x8f, 0xe3, 0x57, 0xe3, 0x0b, 0xcf, 0x5c,
	0xae, 0x73, 0xa4, 0x30, 0x74, 0x1b, 0xf5, 0xd8, 0xcc, 0xa4, 0xb7, 0xae, 0xfd, 0xaf, 0x6e, 0x7f,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xe1, 0xd8, 0x78, 0xfb, 0x69, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	ListContainers(ctx context.Context, in *ListContainer, opts ...grpc.CallOption) (Greeter_ListContainersClient, error)
	QueryESSUsage(ctx context.Context, in *EssSiteInfo, opts ...grpc.CallOption) (Greeter_QueryESSUsageClient, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, "/helloworld.Greeter/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) ListContainers(ctx context.Context, in *ListContainer, opts ...grpc.CallOption) (Greeter_ListContainersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Greeter_serviceDesc.Streams[0], "/helloworld.Greeter/ListContainers", opts...)
	if err != nil {
		return nil, err
	}
	x := &greeterListContainersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Greeter_ListContainersClient interface {
	Recv() (*Container, error)
	grpc.ClientStream
}

type greeterListContainersClient struct {
	grpc.ClientStream
}

func (x *greeterListContainersClient) Recv() (*Container, error) {
	m := new(Container)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *greeterClient) QueryESSUsage(ctx context.Context, in *EssSiteInfo, opts ...grpc.CallOption) (Greeter_QueryESSUsageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Greeter_serviceDesc.Streams[1], "/helloworld.Greeter/QueryESSUsage", opts...)
	if err != nil {
		return nil, err
	}
	x := &greeterQueryESSUsageClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Greeter_QueryESSUsageClient interface {
	Recv() (*QueryResultRow, error)
	grpc.ClientStream
}

type greeterQueryESSUsageClient struct {
	grpc.ClientStream
}

func (x *greeterQueryESSUsageClient) Recv() (*QueryResultRow, error) {
	m := new(QueryResultRow)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
	ListContainers(*ListContainer, Greeter_ListContainersServer) error
	QueryESSUsage(*EssSiteInfo, Greeter_QueryESSUsageServer) error
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Greeter/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_ListContainers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListContainer)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GreeterServer).ListContainers(m, &greeterListContainersServer{stream})
}

type Greeter_ListContainersServer interface {
	Send(*Container) error
	grpc.ServerStream
}

type greeterListContainersServer struct {
	grpc.ServerStream
}

func (x *greeterListContainersServer) Send(m *Container) error {
	return x.ServerStream.SendMsg(m)
}

func _Greeter_QueryESSUsage_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EssSiteInfo)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GreeterServer).QueryESSUsage(m, &greeterQueryESSUsageServer{stream})
}

type Greeter_QueryESSUsageServer interface {
	Send(*QueryResultRow) error
	grpc.ServerStream
}

type greeterQueryESSUsageServer struct {
	grpc.ServerStream
}

func (x *greeterQueryESSUsageServer) Send(m *QueryResultRow) error {
	return x.ServerStream.SendMsg(m)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helloworld.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Greeter_SayHello_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListContainers",
			Handler:       _Greeter_ListContainers_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "QueryESSUsage",
			Handler:       _Greeter_QueryESSUsage_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "dershare.proto",
}
